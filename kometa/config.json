{
  "arch": [
    "aarch64",
    "amd64"
  ],
  "codenotary": "alexandrep.github@gmail.com",
  "description": "Python脚本来更新电影、节目和集合的元数据信息以及自动构建集合\n\n```python\n# Python脚本用于更新电影、节目的元数据信息和自动创建集合\nimport os\nfrom datetime import datetime\n\ndef update_metadata(movie_path):\n    # 更新电影或节目的元数据信息\n    pass  # 实现具体的更新逻辑\n\ndef create_collection(collection_name):\n    # 自动创建一个新的集合\n    pass  # 实现具体的创建逻辑\n\nif __name__ == \"__main__\":\n    # 主程序入口\n    movie_paths = [\"path/to/movie1\", \"path/to/movie2\"]\n    collection_names = [\"Collection1\", \"Collection2\"]\n\n    for path in movie_paths:\n        update_metadata(path)\n\n    for name in collection_names:\n        create_collection(name)\n```\n\n请注意，上述代码只是一个框架示例，你需要根据实际需求实现`update_metadata`和`create_collection`函数的具体逻辑。",
  "devices": [
    "/dev/dri",
    "/dev/dri/card0",
    "/dev/dri/card1",
    "/dev/dri/renderD128",
    "/dev/vchiq",
    "/dev/video10",
    "/dev/video11",
    "/dev/video12",
    "/dev/video13",
    "/dev/video14",
    "/dev/video15",
    "/dev/video16",
    "/dev/ttyUSB0",
    "/dev/sda",
    "/dev/sdb",
    "/dev/sdc",
    "/dev/sdd",
    "/dev/sde",
    "/dev/sdf",
    "/dev/sdg",
    "/dev/nvme",
    "/dev/nvme0",
    "/dev/nvme0n1",
    "/dev/nvme0n1p1",
    "/dev/nvme0n1p2",
    "/dev/nvme0n1p3",
    "/dev/nvme1n1",
    "/dev/nvme1n1p1",
    "/dev/nvme1n1p2",
    "/dev/nvme1n1p3",
    "/dev/nvme2n1",
    "/dev/nvme2n1p1",
    "/dev/nvme2n1p2",
    "/dev/nvme2n3p3",
    "/dev/mmcblk",
    "/dev/fuse",
    "/dev/sda1",
    "/dev/sdb1",
    "/dev/sdc1",
    "/dev/sdd1",
    "/dev/sde1",
    "/dev/sdf1",
    "/dev/sdg1",
    "/dev/sda2",
    "/dev/sdb2",
    "/dev/sdc2",
    "/dev/sdd2",
    "/dev/sde2",
    "/dev/sdf2",
    "/dev/sdg2",
    "/dev/sda3",
    "/dev/sdb3",
    "/dev/sda4",
    "/dev/sdb4",
    "/dev/sda5",
    "/dev/sda6",
    "/dev/sda7",
    "/dev/sda8",
    "/dev/nvme0",
    "/dev/nvme1",
    "/dev/nvme2"
  ],
  "image": "ghcr.nju.edu.cn/alexbelgium/kometa-{arch}",
  "init": false,
  "map": [
    "config:rw",
    "share:rw",
    "media:rw"
  ],
  "name": "Kometa",
  "options": {
    "KOMETA_CONFIG": "/config/addons_config/kometa/config.yml",
    "PGID": 0,
    "PUID": 0
  },
  "privileged": [
    "SYS_ADMIN",
    "DAC_READ_SEARCH"
  ],
  "schema": {
    "KOMETA_CONFIG": "str",
    "KOMETA_NO_MISSING": "bool?",
    "KOMETA_RUN": "bool?",
    "KOMETA_TEST": "bool?",
    "KOMETA_TIME": "str?",
    "PGID": "int",
    "PUID": "int",
    "TZ": "str?"
  },
  "slug": "kometa",
  "udev": true,
  "url": "https://gh-proxy.com/github.com/alexbelgium/hassio-addons/tree/master/kometa",
  "version": "2.1.0"
}
