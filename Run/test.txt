HTTP/1.1 200 OK Content-Type: application/json Content-Length: 18407 Date: Tue, 19 Jan 2021 23:44:55 GMT Server: Python/3.8 aiohttp/3.7.3  [{"domain": "homeassistant", "services": {"turn_off": {"description": "Generic service to turn devices off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.", "fields": {"entity_id": {"description": "The entity_id of the device to turn off.", "example": "light.living_room"}}}, "turn_on": {"description": "Generic service to turn devices on under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.", "fields": {"entity_id": {"description": "The entity_id of the device to turn on.", "example": "light.living_room"}}}, "toggle": {"description": "Generic service to toggle devices on/off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.", "fields": {"entity_id": {"description": "The entity_id of the device to toggle on/off.", "example": "light.living_room"}}}, "stop": {"description": "Stop the Home Assistant service.", "fields": {}}, "restart": {"description": "Restart the Home Assistant service.", "fields": {}}, "check_config": {"description": "Check the Home Assistant configuration files for errors. Errors will be displayed in the Home Assistant log.", "fields": {}}, "update_entity": {"description": "Force one or more entities to update its data", "fields": {"entity_id": {"description": "One or multiple entity_ids to update. Can be a list.", "example": "light.living_room"}}}, "reload_core_config": {"description": "Reload the core configuration.", "fields": {}}, "set_location": {"description": "Update the Home Assistant location.", "fields": {"latitude": {"description": "Latitude of your location", "example": 32.87336}, "longitude": {"description": "Longitude of your location", "example": 117.22743}}}}}, {"domain": "persistent_notification", "services": {"create": {"description": "Show a notification in the frontend.", "fields": {"message": {"description": "Message body of the notification. [Templates accepted]", "example": "Please check your configuration.yaml."}, "title": {"description": "Optional title for your notification. [Optional, Templates accepted]", "example": "Test notification"}, "notification_id": {"description": "Target ID of the notification, will replace a notification with the same Id. [Optional]", "example": 1234}}}, "dismiss": {"description": "Remove a notification from the frontend.", "fields": {"notification_id": {"description": "Target ID of the notification, which should be removed. [Required]", "example": 1234}}}, "mark_read": {"description": "Mark a notification read.", "fields": {"notification_id": {"description": "Target ID of the notification, which should be mark read. [Required]", "example": 1234}}}}}, {"domain": "recorder", "services": {"purge": {"description": "Start purge task - delete events and states older than x days, according to keep_days service data.", "fields": {"keep_days": {"description": "Number of history days to keep in database after purge. Value >= 0.", "example": 2}, "repack": {"description": "Attempt to save disk space by rewriting the entire database file.", "example": true}}}}}, {"domain": "system_log", "services": {"clear": {"description": "Clear all log entries.", "fields": {}}, "write": {"description": "Write log entry.", "fields": {"message": {"description": "Message to log. [Required]", "example": "Something went wrong"}, "level": {"description": "Log level: debug, info, warning, error, critical. Defaults to 'error'.", "example": "debug"}, "logger": {"description": "Logger name under which to log the message. Defaults to 'system_log.external'.", "example": "mycomponent.myplatform"}}}}}, {"domain": "cloud", "services": {"remote_connect": {"description": "Make instance UI available outside over NabuCasa cloud.", "fields": {}}, "remote_disconnect": {"description": "Disconnect UI from NabuCasa cloud.", "fields": {}}}}, {"domain": "person", "services": {"reload": {"description": "Reload the person configuration.", "fields": {}}}}, {"domain": "hassio", "services": {"addon_start": {"description": "Start a Hass.io docker add-on.", "fields": {"addon": {"description": "The add-on slug.", "example": "core_ssh"}}}, "addon_stop": {"description": "Stop a Hass.io docker add-on.", "fields": {"addon": {"description": "The add-on slug.", "example": "core_ssh"}}}, "addon_restart": {"description": "Restart a Hass.io docker add-on.", "fields": {"addon": {"description": "The add-on slug.", "example": "core_ssh"}}}, "addon_stdin": {"description": "Write data to a Hass.io docker add-on stdin .", "fields": {"addon": {"description": "The add-on slug.", "example": "core_ssh"}}}, "host_shutdown": {"description": "Poweroff the host system.", "fields": {}}, "host_reboot": {"description": "Reboot the host system.", "fields": {}}, "snapshot_full": {"description": "Create a full snapshot.", "fields": {"name": {"description": "Optional or it will be the current date and time.", "example": "Snapshot 1"}, "password": {"description": "Optional password.", "example": "password"}}}, "snapshot_partial": {"description": "Create a partial snapshot.", "fields": {"addons": {"description": "Optional list of addon slugs.", "example": ["core_ssh", "core_samba", "core_mosquitto"]}, "folders": {"description": "Optional list of directories.", "example": ["homeassistant", "share"]}, "name": {"description": "Optional or it will be the current date and time.", "example": "Partial Snapshot 1"}, "password": {"description": "Optional password.", "example": "password"}}}, "restore_full": {"description": "", "fields": {}}, "restore_partial": {"description": "", "fields": {}}}}, {"domain": "frontend", "services": {"set_theme": {"description": "Set a theme unless the client selected per-device theme.", "fields": {"name": {"description": "Name of a predefined theme, 'default' or 'none'.", "example": "default"}, "mode": {"description": "The mode the theme is for, either 'dark' or 'light' (default).", "example": "dark"}}}, "reload_themes": {"description": "Reload themes from yaml configuration.", "fields": {}}}}, {"domain": "logbook", "services": {"log": {"description": "Create a custom entry in your logbook.", "fields": {"name": {"description": "Custom name for an entity, can be referenced with entity_id", "example": "Kitchen"}, "message": {"description": "Message of the custom logbook entry", "example": "is being used"}, "entity_id": {"description": "Entity to reference in custom logbook entry [Optional]", "example": "light.kitchen"}, "domain": {"description": "Icon of domain to display in custom logbook entry [Optional]", "example": "light"}}}}}, {"domain": "script", "services": {"reload": {"description": "Reload all the available scripts", "fields": {}}, "turn_on": {"description": "Turn on script", "fields": {"entity_id": {"description": "Name(s) of script to be turned on.", "example": "script.arrive_home"}}}, "turn_off": {"description": "Turn off script", "fields": {"entity_id": {"description": "Name(s) of script to be turned off.", "example": "script.arrive_home"}}}, "toggle": {"description": "Toggle script", "fields": {"entity_id": {"description": "Name(s) of script to be toggled.", "example": "script.arrive_home"}}}}}, {"domain": "scene", "services": {"reload": {"description": "Reload the scene configuration", "fields": {}}, "apply": {"description": "Activate a scene. Takes same data as the entities field from a single scene in the config.", "fields": {"transition": {"description": "Transition duration in seconds it takes to bring devices to the state defined in the scene.", "example": 2.5}, "entities": {"description": "The entities and the state that they need to be.", "example": {"light.kitchen": "on", "light.ceiling": {"state": "on", "brightness": 80}}}}}, "create": {"description": "Creates a new scene.", "fields": {"scene_id": {"description": "The entity_id of the new scene.", "example": "all_lights"}, "entities": {"description": "The entities to control with the scene.", "example": {"light.tv_back_light": "on", "light.ceiling": {"state": "on", "brightness": 200}}}, "snapshot_entities": {"description": "The entities of which a snapshot is to be taken", "example": ["light.ceiling", "light.kitchen"]}}}, "turn_on": {"description": "Activate a scene.", "fields": {"transition": {"description": "Transition duration in seconds it takes to bring devices to the state defined in the scene.", "example": 2.5}, "entity_id": {"description": "Name(s) of scenes to turn on", "example": "scene.romantic"}}}}}, {"domain": "group", "services": {"reload": {"description": "Reload group configuration, entities, and notify services.", "fields": {}}, "set": {"description": "Create/Update a user group.", "fields": {"object_id": {"description": "Group id and part of entity id.", "example": "test_group"}, "name": {"description": "Name of group", "example": "My test group"}, "icon": {"description": "Name of icon for the group.", "example": "mdi:camera"}, "entities": {"description": "List of all members in the group. Not compatible with 'delta'.", "example": "domain.entity_id1, domain.entity_id2"}, "add_entities": {"description": "List of members they will change on group listening.", "example": "domain.entity_id1, domain.entity_id2"}, "all": {"description": "Enable this option if the group should only turn on when all entities are on.", "example": true}}}, "remove": {"description": "Remove a user group.", "fields": {"object_id": {"description": "Group id and part of entity id.", "example": "test_group"}}}}}, {"domain": "zone", "services": {"reload": {"description": "Reload the YAML-based zone configuration.", "fields": {}}}}, {"domain": "counter", "services": {"increment": {"description": "Increment a counter.", "fields": {"entity_id": {"description": "Entity id of the counter to increment.", "example": "counter.count0"}}}, "decrement": {"description": "Decrement a counter.", "fields": {"entity_id": {"description": "Entity id of the counter to decrement.", "example": "counter.count0"}}}, "reset": {"description": "Reset a counter.", "fields": {"entity_id": {"description": "Entity id of the counter to reset.", "example": "counter.count0"}}}, "configure": {"description": "Change counter parameters", "fields": {"entity_id": {"description": "Entity id of the counter to change.", "example": "counter.count0"}, "minimum": {"description": "New minimum value for the counter or None to remove minimum", "example": 0}, "maximum": {"description": "New maximum value for the counter or None to remove maximum", "example": 100}, "step": {"description": "New value for step", "example": 2}, "initial": {"description": "New value for initial", "example": 6}, "value": {"description": "New state value", "example": 3}}}}}, {"domain": "timer", "services": {"reload": {"description": "", "fields": {}}, "start": {"description": "Start a timer.", "fields": {"entity_id": {"description": "Entity id of the timer to start. [optional]", "example": "timer.timer0"}, "duration": {"description": "Duration the timer requires to finish. [optional]", "example": "00:01:00 or 60"}}}, "pause": {"description": "Pause a timer.", "fields": {"entity_id": {"description": "Entity id of the timer to pause. [optional]", "example": "timer.timer0"}}}, "cancel": {"description": "Cancel a timer.", "fields": {"entity_id": {"description": "Entity id of the timer to cancel. [optional]", "example": "timer.timer0"}}}, "finish": {"description": "Finish a timer.", "fields": {"entity_id": {"description": "Entity id of the timer to finish. [optional]", "example": "timer.timer0"}}}}}, {"domain": "input_text", "services": {"reload": {"description": "Reload the input_text configuration.", "fields": {}}, "set_value": {"description": "Set the value of an input text entity.", "fields": {"entity_id": {"description": "Entity id of the input text to set the new value.", "example": "input_text.text1"}, "value": {"description": "The target value the entity should be set to.", "example": "This is an example text"}}}}}, {"domain": "input_boolean", "services": {"reload": {"description": "Reload the input_boolean configuration.", "fields": {}}, "turn_on": {"description": "Turns on an input boolean.", "fields": {"entity_id": {"description": "Entity id of the input boolean to turn on.", "example": "input_boolean.notify_alerts"}}}, "turn_off": {"description": "Turns off an input boolean", "fields": {"entity_id": {"description": "Entity id of the input boolean to turn off.", "example": "input_boolean.notify_alerts"}}}, "toggle": {"description": "Toggles an input boolean.", "fields": {"entity_id": {"description": "Entity id of the input boolean to toggle.", "example": "input_boolean.notify_alerts"}}}}}, {"domain": "input_select", "services": {"reload": {"description": "Reload the input_select configuration.", "fields": {}}, "select_option": {"description": "Select an option of an input select entity.", "fields": {"entity_id": {"description": "Entity id of the input select to select the value.", "example": "input_select.my_select"}, "option": {"description": "Option to be selected.", "example": "\"Item A\""}}}, "select_next": {"description": "Select the next options of an input select entity.", "fields": {"entity_id": {"description": "Entity id of the input select to select the next value for.", "example": "input_select.my_select"}}}, "select_previous": {"description": "Select the previous options of an input select entity.", "fields": {"entity_id": {"description": "Entity id of the input select to select the previous value for.", "example": "input_select.my_select"}}}, "set_options": {"description": "Set the options of an input select entity.", "fields": {"entity_id": {"description": "Entity id of the input select to set the new options for.", "example": "input_select.my_select"}, "options": {"description": "Options for the input select entity.", "example": "[\"Item A\", \"Item B\", \"Item C\"]"}}}}}, {"domain": "input_number", "services": {"reload": {"description": "Reload the input_number configuration.", "fields": {}}, "set_value": {"description": "Set the value of an input number entity.", "fields": {"entity_id": {"description": "Entity id of the input number to set the new value.", "example": "input_number.threshold"}, "value": {"description": "The target value the entity should be set to.", "example": 42}}}, "increment": {"description": "Increment the value of an input number entity by its stepping.", "fields": {"entity_id": {"description": "Entity id of the input number that should be incremented.", "example": "input_number.threshold"}}}, "decrement": {"description": "Decrement the value of an input number entity by its stepping.", "fields": {"entity_id": {"description": "Entity id of the input number that should be decremented.", "example": "input_number.threshold"}}}}}, {"domain": "input_datetime", "services": {"reload": {"description": "Reload the input_datetime configuration.", "fields": {}}, "set_datetime": {"description": "This can be used to dynamically set the date and/or time. Use date/time, datetime or timestamp.", "fields": {"entity_id": {"description": "Entity id of the input datetime to set the new value.", "example": "input_datetime.test_date_time"}, "date": {"description": "The target date the entity should be set to.", "example": "\"2019-04-20\""}, "time": {"description": "The target time the entity should be set to.", "example": "\"05:04:20\""}, "datetime": {"description": "The target date & time the entity should be set to.", "example": "\"2019-04-20 05:04:20\""}, "timestamp": {"description": "The target date & time the entity should be set to as expressed by a UNIX timestamp.", "example": 1598027400}}}}}, {"domain": "automation", "services": {"trigger": {"description": "Trigger the action of an automation.", "fields": {"entity_id": {"description": "Name of the automation to trigger.", "example": "automation.notify_home"}, "skip_condition": {"description": "Whether or not the condition will be skipped (defaults to true).", "example": true}}}, "toggle": {"description": "Toggle an automation.", "fields": {"entity_id": {"description": "Name of the automation to toggle on/off.", "example": "automation.notify_home"}}}, "turn_on": {"description": "Enable an automation.", "fields": {"entity_id": {"description": "Name of the automation to turn on.", "example": "automation.notify_home"}}}, "turn_off": {"description": "Disable an automation.", "fields": {"entity_id": {"description": "Name of the automation to turn off.", "example": "automation.notify_home"}, "stop_actions": {"description": "Stop currently running actions (defaults to true).", "example": false}}}, "reload": {"description": "Reload the automation configuration.", "fields": {}}}}, {"domain": "tts", "services": {"google_translate_say": {"description": "", "fields": {}}, "clear_cache": {"description": "Remove cache files and RAM cache.", "fields": {}}}}, {"domain": "notify", "services": {"persistent_notification": {"description": "Sends a notification to the visible in the front-end.", "fields": {"message": {"description": "Message body of the notification.", "example": "The garage door has been open for 10 minutes."}, "title": {"description": "Optional title for your notification.", "example": "Your Garage Door Friend"}}}, "notify": {"description": "Send a notification.", "fields": {"message": {"description": "Message body of the notification.", "example": "The garage door has been open for 10 minutes."}, "title": {"description": "Optional title for your notification.", "example": "Your Garage Door Friend"}, "target": {"description": "An array of targets to send the notification to. Optional depending on the platform.", "example": "platform specific"}, "data": {"description": "Extended information for notification. Optional depending on the platform.", "example": "platform specific"}}}}}, {"domain": "stream", "services": {"record": {"description": "Make a .mp4 recording from a provided stream.", "fields": {"stream_source": {"description": "The input source for the stream.", "example": "rtsp://my.stream.feed:554"}, "filename": {"description": "The file name string.", "example": "/tmp/my_stream.mp4"}, "duration": {"description": "Target recording length (in seconds). Default: 30", "example": 30}, "lookback": {"description": "Target lookback period (in seconds) to include in addition to duration. Only available if there is currently an active HLS stream for stream_source. Default: 0", "example": 5}}}}}]
