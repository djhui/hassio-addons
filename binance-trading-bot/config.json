{
  "arch": [
    "aarch64",
    "amd64"
  ],
  "codenotary": "alexandrep.github@gmail.com",
  "description": "自动化的币安交易机器人 - 可交易多种加密货币。低买高卖网格交易。与TradingView技术分析集成。\n\n请注意，由于我无法访问实时数据或外部网站，因此无法直接使用TradingView进行技术分析。但是，我可以为您提供一些关于如何设置和使用自动化交易机器人的基本指导：\n\n1. **选择交易平台**：\n   - 选择一个支持您想要交易的加密货币的平台，例如Binance。\n2. **注册和登录**：\n   - 在所选平台上创建账户并完成身份验证。\n3. **添加资金**：\n   - 将您的加密货币存入平台以供交易使用。\n4. **安装交易机器人软件**：\n   - 下载并安装适合您平台的交易机器人软件（如所述的币安交易机器人）。\n5. **配置交易策略**：\n   - 根据您的投资目标和风险承受能力设置交易策略。这包括确定买入价格、卖出价格以及网格间距等参数。\n6. **连接技术分析工具**：\n   - 如果需要，您可以集成像TradingView这样的技术分析工具来辅助决策。\n7. **启动交易**：\n   - 启动交易机器人并根据预设的策略开始执行买卖操作。\n8. **监控和管理**：\n   - 定期检查交易表现，并根据市场情况调整策略。\n\n请记住，自动化交易存在一定的风险，因此在实施之前应充分了解相关知识和风险控制措施。此外，确保遵守当地法律法规和政策要求。如果您有其他问题或需要进一步的帮助，请随时告诉我！",
  "devices": [
    "/dev/dri",
    "/dev/dri/card0",
    "/dev/dri/card1",
    "/dev/dri/renderD128",
    "/dev/vchiq",
    "/dev/video10",
    "/dev/video11",
    "/dev/video12",
    "/dev/video13",
    "/dev/video14",
    "/dev/video15",
    "/dev/video16",
    "/dev/ttyUSB0",
    "/dev/sda",
    "/dev/sdb",
    "/dev/sdc",
    "/dev/sdd",
    "/dev/sde",
    "/dev/sdf",
    "/dev/sdg",
    "/dev/nvme",
    "/dev/nvme0",
    "/dev/nvme0n1",
    "/dev/nvme0n1p1",
    "/dev/nvme0n1p2",
    "/dev/nvme0n1p3",
    "/dev/nvme1n1",
    "/dev/nvme1n1p1",
    "/dev/nvme1n1p2",
    "/dev/nvme1n1p3",
    "/dev/nvme2n1",
    "/dev/nvme2n1p1",
    "/dev/nvme2n1p2",
    "/dev/nvme2n3p3",
    "/dev/mmcblk",
    "/dev/fuse",
    "/dev/sda1",
    "/dev/sdb1",
    "/dev/sdc1",
    "/dev/sdd1",
    "/dev/sde1",
    "/dev/sdf1",
    "/dev/sdg1",
    "/dev/sda2",
    "/dev/sdb2",
    "/dev/sdc2",
    "/dev/sdd2",
    "/dev/sde2",
    "/dev/sdf2",
    "/dev/sdg2",
    "/dev/sda3",
    "/dev/sdb3",
    "/dev/sda4",
    "/dev/sdb4",
    "/dev/sda5",
    "/dev/sda6",
    "/dev/sda7",
    "/dev/sda8",
    "/dev/nvme0",
    "/dev/nvme1",
    "/dev/nvme2"
  ],
  "environment": {
    "BINANCE_REDIS_HOST": "localhost",
    "BINANCE_REDIS_PASSWORD": "",
    "BINANCE_REDIS_PORT": "6379",
    "PYTHONUNBUFFERED": "1",
    "TRADINGVIEW_LOG_LEVEL": "INFO"
  },
  "image": "ghcr.nju.edu.cn/alexbelgium/binance_trading_bot-{arch}",
  "ingress": true,
  "ingress_stream": true,
  "map": [
    "config:rw"
  ],
  "name": "Binance Trading Bot",
  "options": {
    "BINANCE_AUTHENTICATION_ENABLED": true,
    "BINANCE_AUTHENTICATION_PASSWORD": null,
    "BINANCE_MODE": "test",
    "BINANCE_SLACK_ENABLED": false
  },
  "panel_admin": false,
  "panel_icon": "mdi:bitcoin",
  "ports": {
    "80/tcp": null,
    "8080/tcp": null
  },
  "ports_description": {
    "80/tcp": "Web UI port",
    "8080/tcp": "Trading View port"
  },
  "privileged": [
    "SYS_ADMIN",
    "DAC_READ_SEARCH"
  ],
  "schema": {
    "BINANCE_AUTHENTICATION_ENABLED": "bool",
    "BINANCE_AUTHENTICATION_PASSWORD": "str",
    "BINANCE_LIVE_API_KEY": "str?",
    "BINANCE_LIVE_SECRET_KEY": "str?",
    "BINANCE_LOCAL_TUNNEL_ENABLED": "bool?",
    "BINANCE_LOCAL_TUNNEL_SUBDOMAIN": "str?",
    "BINANCE_MODE": "list(live|test)",
    "BINANCE_SLACK_CHANNEL": "str?",
    "BINANCE_SLACK_ENABLED": "bool?",
    "BINANCE_SLACK_USERNAME": "str?",
    "BINANCE_SLACK_WEBHOOK_URL": "str?",
    "BINANCE_TEST_API_KEY": "str?",
    "BINANCE_TEST_SECRET_KEY": "str?"
  },
  "slug": "binance-trading-bot",
  "udev": true,
  "url": "https://gh-proxy.com/github.com/alexbelgium/hassio-addons",
  "version": "0.0.100"
}
