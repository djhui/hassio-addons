name: Extract and Download Docker Image

on: [push]

jobs:
  extract-and-download-docker-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Traverse all directories
      id: traverse_directories
      run: |
        # 初始化 docker_image 为空
        docker_images=()

        # 遍历所有子目录（排除隐藏目录）
        for dir in $(find . -type d ! -path '*/\.*'); do
          echo "Processing directory: $dir"

          # 检查 build.json
          if [ -f "$dir/build.json" ]; then
            echo "Found build.json in $dir"
            docker_image=$(jq -r '.docker_image // empty' "$dir/build.json" || true)
            if [ -n "$docker_image" ]; then
              echo "docker_image found in build.json: $docker_image"
              docker_images+=("$docker_image")
            fi
          fi

          # 检查 build.yaml
          if [ -z "$docker_image" ] && [ -f "$dir/build.yaml" ]; then
            echo "Found build.yaml in $dir"
            docker_image=$(yq eval ".build_from.${ARCH} // \"\"" "$dir/build.yaml" || true)
            if [ -n "$docker_image" ]; then
              echo "docker_image found in build.yaml: $docker_image"
              docker_images+=("$docker_image")
            fi
          fi

          # 检查 Dockerfile
          if [ -z "$docker_image" ] && [ -f "$dir/Dockerfile" ]; then
            echo "Found Dockerfile in $dir"
            docker_image=$(grep -oP '(?<=^FROM\s)[^ ]+' "$dir/Dockerfile" || true)
            if [ -n "$docker_image" ]; then
              echo "docker_image found in Dockerfile: $docker_image"
              docker_images+=("$docker_image")
            fi
          fi
        done

    - name: Download Docker Images
      run: |
        # 遍历所有找到的 Docker 镜像并尝试下载
        for docker_image in "${docker_images[@]}"; do
          echo "Attempting to download Docker image: $docker_image"
          
          # 尝试下载 Docker 镜像，如果失败，跳过该镜像并继续下一个
          if docker pull "$docker_image" && docker save "$docker_image" -o image.tar; then
            echo "Successfully downloaded Docker image: $docker_image"
            break  # 如果下载成功，则停止
          else
            echo "Failed to download Docker image: $docker_image. Skipping..."
            continue  # 下载失败时跳过该镜像，继续处理下一个
          fi
        done


    - name: Commit Docker Image to Repository
      run: |
        if [ -f image.tar ]; then
          git config --local user.name "github-actions"
          git config --local user.email "github-actions@github.com"
          git add image.tar
          git commit -m "Add downloaded Docker image with exact tag"
          git push
        fi
