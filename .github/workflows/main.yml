name: Sync Home Assistant Addons

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: download the addons
        run: |
          wget -O official.zip https://github.com/home-assistant/addons/archive/refs/heads/master.zip &
          wget -O community.zip https://github.com/hassio-addons/repository/archive/refs/heads/master.zip &
          wget -O alexbelgium.zip https://github.com/alexbelgium/hassio-addons/archive/refs/heads/master.zip &
          wget -O Poeschl.zip https://github.com/Poeschl-HomeAssistant-Addons/repository/archive/refs/heads/main.zip &
          wget -O erik73.zip https://github.com/erik73/hassio-addons/archive/refs/heads/master.zip &
          wget -O einschmidt.zip https://github.com/einschmidt/hassio-addons/archive/refs/heads/main.zip &
          wget -O FaserF.zip https://github.com/FaserF/hassio-addons/archive/refs/heads/master.zip &
          wget -O jdeath.zip https://github.com/jdeath/homeassistant-addons/archive/refs/heads/main.zip &
          wget -O hacs.zip https://github.com/hacs/addons/archive/refs/heads/main.zip &
          wget -O bluemaes.zip https://github.com/bluemaex/home-assistant-addons/archive/refs/heads/main.zip &
          wget -O expaso.zip https://github.com/expaso/hassos-addons/archive/refs/heads/main.zip &
          wget -O blakeblackshear.zip https://github.com/blakeblackshear/frigate-hass-addons/archive/refs/heads/main.zip &
          wget -O music-assistant.zip https://github.com/music-assistant/home-assistant-addon/archive/refs/heads/main.zip &
          wget -O esphome.zip https://github.com/esphome/home-assistant-addon/archive/refs/heads/main.zip &
          wget -O litinoveweedle.zip https://github.com/litinoveweedle/hassio-addons/archive/refs/heads/main.zip &
          wget -O brenner-tobias.zip https://github.com/brenner-tobias/ha-addons/archive/refs/heads/main.zip &
          wget -O sanderdw.zip https://github.com/sanderdw/hassio-addons/archive/refs/heads/master.zip &
          wget -O dianlight.zip https://github.com/dianlight/hassio-addons/archive/refs/heads/master.zip &
          wget -O hydroqc.zip https://gitlab.com/hydroqc/hydroqc-hass-addons/-/archive/main/hydroqc-hass-addons-main.zip &
          wget -O hass-broadlink-ac-mqtt.zip https://github.com/Arbuzov/hass-broadlink-ac-mqtt/archive/refs/heads/master.zip &
          wget -O hugobloem.zip https://github.com/hugobloem/homeassistant-addons/archive/refs/heads/main.zip &
          wget -O haberda.zip https://github.com/haberda/hassio_addons/archive/refs/heads/master.zip &
          wget -O AlexxIT.zip https://github.com/AlexxIT/hassio-addons/archive/refs/heads/master.zip
          wait
      - name: extract the addons
        run: |
          for file in *.zip; do
            unzip -o "$file" -d addons && rm "$file"
          done

      - name: modify the addons download link to accelerate url
        run: |
          find addons -type f \( -name "*.yaml" -o -name "*.json" -o -name "Dockerfile" \) -exec sed -i \
            -e 's|ghcr.io|ghcr.nju.edu.cn|g' \
            -e 's|image: homeassistant|image: docker.m.daocloud.io/homeassistant|g' \
            -e 's|docker.io|docker.m.daocloud.io|g' \
            -e 's|lscr.io|docker.m.daocloud.io|g' \
            -e 's|https://github.com|https://gh-proxy.com/github.com|g' \
            -e 's|ADD "https://raw.githubusercontent.com|ADD "https://gh-proxy.com/raw.githubusercontent.com|g' {} +

      - name: Replace description in config files
        run: |
          # 遍历所有 config 文件
          find . -type f -name "config" | while read -r file; do
            # 判断文件是否为 JSON 格式
            if file -b --mime-type "$file" | grep -q "json"; then
              # 处理 JSON 文件，提取 description 字段的内容
              description=$(jq -r '.description' "$file")
              
              # 如果 description 为空，则跳过
              if [ "$description" == "null" ]; then
                echo "No description found in $file (JSON), skipping..."
                continue
              fi

              # 调用 API 翻译 description 内容
              translated_description=$(curl --location 'https://open.bigmodel.cn/api/paas/v4/chat/completions' \
                --header "Authorization: Bearer ${{ secrets.ZHIPUAI_KEY }}" \
                --header 'Content-Type: application/json' \
                --data "{
                  \"model\": \"glm-4v-flash\",
                  \"messages\": [
                    {
                      \"role\": \"user\",
                      \"content\": \"翻译成中文：$description\"
                    }
                  ]
                }" | jq -r '.choices[0].message.content')
              echo "Translated description for $file (JSON): $translated_description"
              jq -i ".description = \"$translated_description\"" "$file"

            elif file -b --mime-type "$file" | grep -q "text"; then
              description=$(grep -oP '(?<=description: ).*' "$file")
              if [ -z "$description" ]; then
                echo "No description found in $file (non-JSON), skipping..."
                continue
              fi

              translated_description=$(curl --location 'https://open.bigmodel.cn/api/paas/v4/chat/completions' \
                --header "Authorization: Bearer ${{ secrets.ZHIPUAI_KEY }}" \
                --header 'Content-Type: application/json' \
                --data "{
                  \"model\": \"glm-4v-flash\",
                  \"messages\": [
                    {
                      \"role\": \"user\",
                      \"content\": \"翻译成中文：$description\"
                    }
                  ]
                }" | jq -r '.choices[0].message.content')

              echo "Translated description for $file (non-JSON): $translated_description"

              sed -i "s|description: .*|description: $translated_description|" "$file"
            fi
          done



      #- name: Run link.py if Necessary
      #  run: |
      #    if [ -f link.py ]; then python3 link.py; fi
      #  working-directory: addons

      - name: remove the hidden files
        run: |
          find addons/ -name ".*" -exec rm -rf {} +
          for ITEM in addons/*/*; do
          BASENAME=$(basename "$ITEM") 
          TARGET_PATH="./$BASENAME"
            if [ -f "$ITEM" ]; then
              rm -f "$ITEM"
              echo "Deleted $ITEM" 
            elif [ -d "$ITEM" ]; then
              rm -rf "$TARGET_PATH"
              mv -f "$ITEM" "./" || echo "Failed to move directory: $ITEM"
              echo "Moved directory: $ITEM"
            fi
          done
          rm -rf whisparr

      - name: sync hass-panel
        run: |
          mkdir -p hass-panel hass-panel-beta
          wget -O hass-panel.zip https://github.com/mrtian2016/hass-panel/archive/refs/heads/main.zip
          unzip -o hass-panel.zip -d hass-panel-temp && rm hass-panel.zip
          mv -f hass-panel-temp/hass-panel-main/hass-panel/* hass-panel/
          mv -f hass-panel-temp/hass-panel-main/hass-panel-beta/* hass-panel-beta/

          rm -rf hass-panel-temp

      - run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Sync addons" || echo "No changes to commit"
          git push
