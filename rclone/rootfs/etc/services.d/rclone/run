#!/usr/bin/with-contenv bashio

RCLONE_CONFIG=$(bashio::config 'configuration_path')
REMOTES=$(bashio::config 'remotes')
LOCAL_RETENTION=$(bashio::config 'local_retention_days')

bashio::log.info "Pruning local files..."
find /backup/ -mtime +"${LOCAL_RETENTION}" -type f -delete
bashio::log.info "Pruning local files finished"

for remote in ${REMOTES}; do
    remote_name=$(bashio::jq "${remote}" ".name")
    remote_path=$(bashio::jq "${remote}" ".path")
    remote_retention=$(bashio::jq "${remote}" ".retention_days")
    remote_start_url=$(bashio::jq "${remote}" ".start_url")
    remote_end_url=$(bashio::jq "${remote}" ".end_url")
    remote_log=$(dirname $(bashio::config 'configuration_path'))"/sync_${remote_name}.log"

    if [[ "${remote_start_url}" != "null" ]] 
    then
        bashio::log.info "Pinging start_url for ${remote_name}: ${remote_start_url}..."
        curl -fsS "${remote_start_url}"
    fi

    bashio::log.info "Starting remote copy for ${remote_name}..."

    EXIT_CODE=0
    true > ${remote_log}
    rclone --config "${RCLONE_CONFIG}" \
        sync \
        --max-age "${remote_retention}d" \
        --delete-during \
        --delete-excluded \
        --ignore-errors \
        --ignore-existing /backup/ "${remote_name}:${remote_path}" \
        --log-level INFO \
        --log-file=${remote_log} || EXIT_CODE=$?

    bashio::log.info "Remote copy for ${remote_name} finished with code ${EXIT_CODE}"

    if [[ "${remote_end_url}" != "null" ]]
    then
        ping_url=${remote_end_url}/${EXIT_CODE}
        bashio::log.info "Pinging end_url for ${remote_name}: ${ping_url}"
        curl -fsS "${ping_url}" --data-binary "@${remote_log}"
    fi
done
